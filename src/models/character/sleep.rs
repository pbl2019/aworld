impl Character {
    pub fn sleep(sleep_ms: i32) {
        // 眠っている間は機能が制限される
        // 眠りの深さを超えなかったら動かない
        // 眠りの深さ

        // 眠っている間におきるイベントをcronみたいな感じで実行できるよ良い?
        // sleep_start, sleep_endみたいなメソッドを生やして、CharacterLocal?
        // 前回の動いた時刻　眠った時間
        // time durationでも?

        // 眠っている間に体力回復する
        // お腹があまり減らない
        // それぞれ深い眠りほど、どうなる？


        // 眠る処理
        // 特定の時間眠るよりも
        // 眠りの深さという値がcharacterlocalの眠り閾値を超えている場合は眠っているという処理の方がよさそう
        // 眠りの閾値が複数あればおもしろうそう

        // 眠りの深さ: i32
        // 眠りの閾値: i32 
        // 閾値: 浅い眠り, 普通の眠り, 深い眠り, 永眠

        // e.g. 眠りの深さ 60
        // e.g. 浅い眠り 30
        // e.g. 普通の眠り 50
        // e.g. 深い眠り 70
        // e.g. 永眠 100
        // この場合は普通の眠りなる

        // 確率で眠る
        // 安心するとより深い眠り
        // 周りに誰もいない場合？(敵対的なcharacterがいない場合)

        // 深い眠りに陥る秒数の上限
        // レム睡眠 90 x 60 = 5400
        // これが上限?
        // 下限が0


        // 確定
        // 上限 5400, 下限 0
    }
}

// 体力を回復する
fn recover_health() {

}

// 一定間隔で何かをする
fn cycle() {

}
